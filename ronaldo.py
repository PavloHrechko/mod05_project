import datetimefrom matplotlib import pyplot as pltfrom main import get_date_list, read_price_datastock_symbol = 'MANU' # Stock symbol# Set time periodstart_date = datetime.datetime(2021, 6, 1)end_date = datetime.datetime(2022, 12, 1)interval = 'd' # Date interval, by default daily ('d')# Import price series and list of trading daystry:    date_list = get_date_list(stock_symbol, start_date, end_date, interval=interval)    price_series = read_price_data(stock_symbol, start_date, end_date, interval=interval)except:    print('Import failed')# num = 1# for date in date_list:#     print(num, " - ", date)#     num+=1fig, ax = plt.subplots(figsize=(15, 8))# Manually set your annotations of events here# Check date_list to match index to event date (for instance, 47 equates March 11, 2020)# Note that events may occur on non-trading days#Ronaldoax.annotate('27 June 2021: Ronaldo rejoins\nManchester United from Juventus',            xy=(date_list[20], price_series[20]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(70, 110),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('25 August 2021: Ronaldo\nscores two goals on his debut\nfor Manchester United',            xy=(date_list[82], price_series[82]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(80, 50),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('12 March 2022: Ronaldo scores\na hat-trick in Manchester United\'s 3-2 win\nover Tottenham Hotspur',            xy=(date_list[198], price_series[198]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(85, -50),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('17 April 2022: Ronaldo scoresthe winning goal\nin Manchester United\'s 2-1 win over\nChelsea in the FA Cup quarter finals',            xy=(date_list[223], price_series[223]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(90, 90),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('26 October 2022: Ronaldo scores\na hat-trick in Manchester United\'s 3-0 win\nover Tottenham Hotspur in the Premier League',            xy=(date_list[356], price_series[356]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(30, 110),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('30 October 2022: Den Hag (coach of M.U.)\nremoved Ronaldo from the main roster',            xy=(date_list[359], price_series[359]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(70, -80),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)ax.annotate('22 November 2022:\nRonaldo leaves the team',            xy=(date_list[375], price_series[375]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(-30, 50),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=8)# Customize the color themeax.set_facecolor('white')  # Set background color to whiteax.spines[['top', 'right', 'bottom', 'left']].set_color('black')  # Set axis spines to blackax.yaxis.label.set_color('black')  # Set y-axis label color to blackax.xaxis.label.set_color('black')  # Set x-axis label color to black# Set options for the interactive plotfig.canvas.toolbar_visible = Falsefig.canvas.resizable = False# Set labelsplt.title('Stock price {}'.format(stock_symbol), fontdict={'fontsize': 15, 'color': 'black'})  # Set title color to blackplt.xlabel('Date', fontdict={'fontsize': 15, 'color': 'black'})  # Set label color to blackplt.ylabel('Adj. close price', fontdict={'fontsize': 15, 'color': 'black'})  # Set label color to black# Plot annotated price series with a red lineplt.plot(date_list, price_series, color='black')# Display the plotplt.show()