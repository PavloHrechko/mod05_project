import datetimefrom matplotlib import pyplot as pltfrom main import get_date_list, read_price_datastock_symbol = 'MANU' # Stock symbol# Set time periodstart_date = datetime.datetime(2023, 5, 1)end_date = datetime.datetime(2023, 10, 25)interval = 'd' # Date interval, by default daily ('d')# Import price series and list of trading daystry:    date_list = get_date_list(stock_symbol, start_date, end_date, interval=interval)    price_series = read_price_data(stock_symbol, start_date, end_date, interval=interval)except:    print('Import failed')num = 1for date in date_list:    print(num, " - ", date)    num+=1fig, ax = plt.subplots(figsize=(15, 8))# Manually set your annotations of events here# Check date_list to match index to event date (for instance, 47 equates March 11, 2020)# Note that events may occur on non-trading days#Antonyax.annotate('7 June 2023: Antony faced\nallegations of violence\nagainst women',            xy=(date_list[27], price_series[27]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(0, 150),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=12)ax.annotate('10 September 2023: Antony\nwas given a leave of absence\nby Manchester United',            xy=(date_list[92], price_series[92]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(10, -90),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=12)ax.annotate('29 September 2023: Anthony\nreturned to Manchester\nUnited and Brazil  rooster',            xy=(date_list[106], price_series[106]),            xycoords='data',            bbox=dict(boxstyle="square", fc="none", ec="red"),  # Set edge color to black            xytext=(100, 140),            textcoords='offset points',            arrowprops=dict(arrowstyle='->', color='red'),  # Set arrow color to black            va='center',            ha='right',            fontsize=12)# Customize the color themeax.set_facecolor('white')  # Set background color to whiteax.spines[['top', 'right', 'bottom', 'left']].set_color('black')  # Set axis spines to blackax.yaxis.label.set_color('black')  # Set y-axis label color to blackax.xaxis.label.set_color('black')  # Set x-axis label color to black# Set options for the interactive plotfig.canvas.toolbar_visible = Falsefig.canvas.resizable = False# Set labelsplt.title('Stock price {}'.format(stock_symbol), fontdict={'fontsize': 15, 'color': 'black'})  # Set title color to blackplt.xlabel('Date', fontdict={'fontsize': 15, 'color': 'black'})  # Set label color to blackplt.ylabel('Adj. close price', fontdict={'fontsize': 15, 'color': 'black'})  # Set label color to black# Plot annotated price series with a red lineplt.plot(date_list, price_series, color='black')# Display the plotplt.show()